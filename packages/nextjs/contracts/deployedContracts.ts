/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155111: {
    CitizenIdentityRegistry: {
      address: "0x9F4Bc4cb48e60871768b4cFB9CF9C53381063652",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
          ],
          name: "StringsInsufficientHexLength",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "deactivatedBy",
              type: "address",
            },
          ],
          name: "CitizenDeactivated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "ensName",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "efpTokenId",
              type: "string",
            },
          ],
          name: "CitizenProfileUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "ensName",
              type: "string",
            },
            {
              indexed: false,
              internalType: "enum CitizenIdentityRegistry.VerificationLevel",
              name: "verificationLevel",
              type: "uint8",
            },
          ],
          name: "CitizenRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum CitizenIdentityRegistry.VerificationLevel",
              name: "oldLevel",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "enum CitizenIdentityRegistry.VerificationLevel",
              name: "newLevel",
              type: "uint8",
            },
          ],
          name: "CitizenVerificationUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "citizens",
          outputs: [
            {
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "ensName",
              type: "string",
            },
            {
              internalType: "string",
              name: "efpTokenId",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "efpFollowers",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "efpFollowing",
              type: "uint256",
            },
            {
              internalType: "enum CitizenIdentityRegistry.VerificationLevel",
              name: "verificationLevel",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "registrationTimestamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lastUpdateTimestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "reputationScore",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "ipfsMetadata",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
          ],
          name: "deactivateCitizen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "ensNameToCitizenId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getActiveCitizensCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
          ],
          name: "getCitizen",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "citizenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "walletAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "ensName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "efpTokenId",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "efpFollowers",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "efpFollowing",
                  type: "uint256",
                },
                {
                  internalType:
                    "enum CitizenIdentityRegistry.VerificationLevel",
                  name: "verificationLevel",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "registrationTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lastUpdateTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "reputationScore",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "ipfsMetadata",
                  type: "string",
                },
              ],
              internalType: "struct CitizenIdentityRegistry.CitizenProfile",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_ensName",
              type: "string",
            },
          ],
          name: "getCitizenByENS",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "citizenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "walletAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "ensName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "efpTokenId",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "efpFollowers",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "efpFollowing",
                  type: "uint256",
                },
                {
                  internalType:
                    "enum CitizenIdentityRegistry.VerificationLevel",
                  name: "verificationLevel",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "registrationTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lastUpdateTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "reputationScore",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "ipfsMetadata",
                  type: "string",
                },
              ],
              internalType: "struct CitizenIdentityRegistry.CitizenProfile",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getCitizenByWallet",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "citizenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "walletAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "ensName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "efpTokenId",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "efpFollowers",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "efpFollowing",
                  type: "uint256",
                },
                {
                  internalType:
                    "enum CitizenIdentityRegistry.VerificationLevel",
                  name: "verificationLevel",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "registrationTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lastUpdateTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "reputationScore",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "ipfsMetadata",
                  type: "string",
                },
              ],
              internalType: "struct CitizenIdentityRegistry.CitizenProfile",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "_citizenIds",
              type: "uint256[]",
            },
          ],
          name: "getCitizensBatch",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "citizenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "walletAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "ensName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "efpTokenId",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "efpFollowers",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "efpFollowing",
                  type: "uint256",
                },
                {
                  internalType:
                    "enum CitizenIdentityRegistry.VerificationLevel",
                  name: "verificationLevel",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "registrationTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lastUpdateTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "reputationScore",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "ipfsMetadata",
                  type: "string",
                },
              ],
              internalType: "struct CitizenIdentityRegistry.CitizenProfile[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalCitizens",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getVerificationLevel",
          outputs: [
            {
              internalType: "enum CitizenIdentityRegistry.VerificationLevel",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "isCitizenRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_ensName",
              type: "string",
            },
          ],
          name: "isENSNameAvailable",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
          ],
          name: "reactivateCitizen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_ensName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_efpTokenId",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_efpFollowers",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_efpFollowing",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_ipfsMetadata",
              type: "string",
            },
          ],
          name: "registerCitizen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "registerCitizenSimple",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "registeredEnsNames",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_efpTokenId",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_efpFollowers",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_efpFollowing",
              type: "uint256",
            },
          ],
          name: "updateEFPVerification",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_ensName",
              type: "string",
            },
          ],
          name: "updateENSName",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_reputationScore",
              type: "uint256",
            },
          ],
          name: "updateReputationScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "walletToCitizenId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 9142952,
    },
    GovernmentProjectRegistry: {
      address: "0xA2B1623a4AdE119f510Bd33493D70A246737bcD8",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_citizenRegistry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "entity",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "authorized",
              type: "bool",
            },
            {
              indexed: true,
              internalType: "address",
              name: "authorizedBy",
              type: "address",
            },
          ],
          name: "GovernmentEntityAuthorized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBudget",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBudget",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "updatedBy",
              type: "address",
            },
          ],
          name: "ProjectBudgetUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "title",
              type: "string",
            },
            {
              indexed: false,
              internalType: "enum GovernmentProjectRegistry.ProjectCategory",
              name: "category",
              type: "uint8",
            },
            {
              indexed: true,
              internalType: "address",
              name: "governmentEntity",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalBudget",
              type: "uint256",
            },
          ],
          name: "ProjectCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "milestoneId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "title",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "targetDate",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "budgetAllocated",
              type: "uint256",
            },
          ],
          name: "ProjectMilestoneAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "milestoneId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "completionDate",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "actualBudgetSpent",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "evidenceHash",
              type: "string",
            },
          ],
          name: "ProjectMilestoneCompleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum GovernmentProjectRegistry.ProjectStatus",
              name: "oldStatus",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "enum GovernmentProjectRegistry.ProjectStatus",
              name: "newStatus",
              type: "uint8",
            },
            {
              indexed: true,
              internalType: "address",
              name: "updatedBy",
              type: "address",
            },
          ],
          name: "ProjectStatusUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_title",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_targetDate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_budgetAllocated",
              type: "uint256",
            },
          ],
          name: "addProjectMilestone",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_entity",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_authorized",
              type: "bool",
            },
          ],
          name: "authorizeGovernmentEntity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "authorizedGovernmentEntities",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "categoryProjects",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "citizenRegistry",
          outputs: [
            {
              internalType: "contract CitizenIdentityRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_milestoneId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_actualBudgetSpent",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_evidenceHash",
              type: "string",
            },
          ],
          name: "completeProjectMilestone",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_title",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "enum GovernmentProjectRegistry.ProjectCategory",
              name: "_category",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_totalBudget",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_estimatedEndDate",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_documentationHash",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_isPublic",
              type: "bool",
            },
          ],
          name: "createProject",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "enum GovernmentProjectRegistry.ProjectStatus",
              name: "_status",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_newBudget",
              type: "uint256",
            },
          ],
          name: "emergencyUpdateProject",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
          ],
          name: "getProject",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "projectId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "title",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType:
                    "enum GovernmentProjectRegistry.ProjectCategory",
                  name: "category",
                  type: "uint8",
                },
                {
                  internalType: "enum GovernmentProjectRegistry.ProjectStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "address",
                  name: "governmentEntity",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "totalBudget",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "budgetSpent",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startDate",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "estimatedEndDate",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "actualEndDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "documentationHash",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "citizenSupportScore",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isPublic",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "creationTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lastUpdateTimestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct GovernmentProjectRegistry.Project",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
          ],
          name: "getProjectMilestones",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "milestoneId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "title",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "targetDate",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "completionDate",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "budgetAllocated",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "budgetSpent",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isCompleted",
                  type: "bool",
                },
                {
                  internalType: "string",
                  name: "evidenceHash",
                  type: "string",
                },
              ],
              internalType:
                "struct GovernmentProjectRegistry.ProjectMilestone[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
          ],
          name: "getProjectProgress",
          outputs: [
            {
              internalType: "uint256",
              name: "totalMilestones",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "completedMilestones",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "budgetUtilization",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getProjectStats",
          outputs: [
            {
              internalType: "uint256",
              name: "totalProjects",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "approvedProjects",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "inProgressProjects",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "completedProjects",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalBudgetAllocated",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalBudgetSpent",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum GovernmentProjectRegistry.ProjectCategory",
              name: "_category",
              type: "uint8",
            },
          ],
          name: "getProjectsByCategory",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_entity",
              type: "address",
            },
          ],
          name: "getProjectsByGovernmentEntity",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum GovernmentProjectRegistry.ProjectStatus",
              name: "_status",
              type: "uint8",
            },
          ],
          name: "getProjectsByStatus",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalProjects",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "governmentEntityProjects",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "milestoneCompleted",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "projectMilestones",
          outputs: [
            {
              internalType: "uint256",
              name: "milestoneId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "title",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "targetDate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "completionDate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "budgetAllocated",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "budgetSpent",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isCompleted",
              type: "bool",
            },
            {
              internalType: "string",
              name: "evidenceHash",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "projects",
          outputs: [
            {
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "title",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "enum GovernmentProjectRegistry.ProjectCategory",
              name: "category",
              type: "uint8",
            },
            {
              internalType: "enum GovernmentProjectRegistry.ProjectStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "governmentEntity",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalBudget",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "budgetSpent",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startDate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "estimatedEndDate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "actualEndDate",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "documentationHash",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "citizenSupportScore",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isPublic",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "creationTimestamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lastUpdateTimestamp",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_isPublic",
              type: "bool",
            },
          ],
          name: "setProjectPublic",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_supportScore",
              type: "uint256",
            },
          ],
          name: "updateCitizenSupportScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_newBudget",
              type: "uint256",
            },
          ],
          name: "updateProjectBudget",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "enum GovernmentProjectRegistry.ProjectStatus",
              name: "_newStatus",
              type: "uint8",
            },
          ],
          name: "updateProjectStatus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 9142956,
    },
    IssueReportingSystem: {
      address: "0x59a10e9f83641e83F9761A5Cc4A7307016D3F8C0",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_citizenRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_reputationSystem",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "reportId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "evidenceHash",
              type: "string",
            },
            {
              indexed: true,
              internalType: "address",
              name: "submittedBy",
              type: "address",
            },
          ],
          name: "EvidenceAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "reportId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "assignedTo",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "assignedBy",
              type: "address",
            },
          ],
          name: "IssueAssigned",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "reportId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "duplicateOfReportId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "markedBy",
              type: "address",
            },
          ],
          name: "IssueDuplicate",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "reportId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "reporter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum IssueReportingSystem.IssueCategory",
              name: "category",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "enum IssueReportingSystem.IssueSeverity",
              name: "severity",
              type: "uint8",
            },
          ],
          name: "IssueReported",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "reportId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "resolvedBy",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "resolutionNotes",
              type: "string",
            },
          ],
          name: "IssueResolved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "reportId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum IssueReportingSystem.IssueStatus",
              name: "previousStatus",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "enum IssueReportingSystem.IssueStatus",
              name: "newStatus",
              type: "uint8",
            },
            {
              indexed: true,
              internalType: "address",
              name: "updatedBy",
              type: "address",
            },
          ],
          name: "IssueStatusUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "reportId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "voter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isSupporting",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "voterReputation",
              type: "uint256",
            },
          ],
          name: "IssueVerificationVote",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_evidenceHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "_ipfsDescriptionHash",
              type: "string",
            },
          ],
          name: "addEvidence",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_assignee",
              type: "address",
            },
          ],
          name: "assignIssue",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_entity",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_authorized",
              type: "bool",
            },
          ],
          name: "authorizeGovernmentEntity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "authorizedGovernmentEntities",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "categoryReports",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "citizenRegistry",
          outputs: [
            {
              internalType: "contract CitizenIdentityRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "citizenReports",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "duplicateThreshold",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
            {
              internalType: "enum IssueReportingSystem.IssueStatus",
              name: "_status",
              type: "uint8",
            },
          ],
          name: "emergencyUpdateReportStatus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_citizen",
              type: "address",
            },
          ],
          name: "getCitizenReports",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
          ],
          name: "getReport",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "reportId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "citizenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "reporter",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "title",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfsDescriptionHash",
                  type: "string",
                },
                {
                  internalType: "enum IssueReportingSystem.IssueCategory",
                  name: "category",
                  type: "uint8",
                },
                {
                  internalType: "enum IssueReportingSystem.IssueSeverity",
                  name: "severity",
                  type: "uint8",
                },
                {
                  internalType: "enum IssueReportingSystem.IssueStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "string",
                  name: "ipfsLocationDataHash",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "submitTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lastUpdateTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationScore",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "supportCount",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "assignedTo",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "ipfsResolutionNotesHash",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "resolutionTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isAnonymous",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "duplicateOfReportId",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "tags",
                  type: "string[]",
                },
              ],
              internalType: "struct IssueReportingSystem.IssueReport",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
          ],
          name: "getReportEvidence",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "evidenceHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfsDescriptionHash",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "submittedBy",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "isVerified",
                  type: "bool",
                },
              ],
              internalType: "struct IssueReportingSystem.Evidence[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getReportStats",
          outputs: [
            {
              internalType: "uint256",
              name: "totalReports",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "verifiedReports",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "resolvedReports",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "pendingReports",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
          ],
          name: "getReportVerifications",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "citizenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "voter",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "isSupporting",
                  type: "bool",
                },
                {
                  internalType: "string",
                  name: "ipfsCommentsHash",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "voterReputationAtTime",
                  type: "uint256",
                },
              ],
              internalType: "struct IssueReportingSystem.VerificationVote[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum IssueReportingSystem.IssueCategory",
              name: "_category",
              type: "uint8",
            },
          ],
          name: "getReportsByCategory",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum IssueReportingSystem.IssueStatus",
              name: "_status",
              type: "uint8",
            },
          ],
          name: "getReportsByStatus",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalReports",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "hasSupportedReport",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "hasVotedOnReport",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "locationReports",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_originalReportId",
              type: "uint256",
            },
          ],
          name: "markAsDuplicate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "minimumVerificationScore",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "reportEvidence",
          outputs: [
            {
              internalType: "string",
              name: "evidenceHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsDescriptionHash",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "submittedBy",
              type: "address",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "reportVerifications",
          outputs: [
            {
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "voter",
              type: "address",
            },
            {
              internalType: "bool",
              name: "isSupporting",
              type: "bool",
            },
            {
              internalType: "string",
              name: "ipfsCommentsHash",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "voterReputationAtTime",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "reports",
          outputs: [
            {
              internalType: "uint256",
              name: "reportId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "reporter",
              type: "address",
            },
            {
              internalType: "string",
              name: "title",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsDescriptionHash",
              type: "string",
            },
            {
              internalType: "enum IssueReportingSystem.IssueCategory",
              name: "category",
              type: "uint8",
            },
            {
              internalType: "enum IssueReportingSystem.IssueSeverity",
              name: "severity",
              type: "uint8",
            },
            {
              internalType: "enum IssueReportingSystem.IssueStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "ipfsLocationDataHash",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "submitTimestamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lastUpdateTimestamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "verificationScore",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "supportCount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "assignedTo",
              type: "address",
            },
            {
              internalType: "string",
              name: "ipfsResolutionNotesHash",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "resolutionTimestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isAnonymous",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "duplicateOfReportId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "reputationSystem",
          outputs: [
            {
              internalType: "contract ReputationSystem",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_title",
              type: "string",
            },
            {
              internalType: "string",
              name: "_ipfsDescriptionHash",
              type: "string",
            },
            {
              internalType: "enum IssueReportingSystem.IssueCategory",
              name: "_category",
              type: "uint8",
            },
            {
              internalType: "enum IssueReportingSystem.IssueSeverity",
              name: "_severity",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "_ipfsLocationDataHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "_evidenceHash",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "_tags",
              type: "string[]",
            },
            {
              internalType: "bool",
              name: "_isAnonymous",
              type: "bool",
            },
          ],
          name: "submitIssueReport",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
            {
              internalType: "enum IssueReportingSystem.IssueStatus",
              name: "_newStatus",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "_ipfsNotesHash",
              type: "string",
            },
          ],
          name: "updateIssueStatus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_reputationSystem",
              type: "address",
            },
          ],
          name: "updateReputationSystem",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_minimumScore",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_verificationThreshold",
              type: "uint256",
            },
          ],
          name: "updateVerificationThresholds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "verificationThreshold",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_reportId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_isSupporting",
              type: "bool",
            },
            {
              internalType: "string",
              name: "_ipfsCommentsHash",
              type: "string",
            },
          ],
          name: "verifyReport",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 9142959,
    },
    ReputationSystem: {
      address: "0x0Be2398A11E351903d7528533F2b5d544301510c",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_citizenRegistry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "contractAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "authorized",
              type: "bool",
            },
          ],
          name: "ContractAuthorized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "issueReportReward",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "verificationReward",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "votingReward",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "projectCompletionReward",
              type: "uint256",
            },
          ],
          name: "ReputationConfigUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "citizen",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "oldScore",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newScore",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          name: "ReputationUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_reportId",
              type: "bytes32",
            },
          ],
          name: "addIssueReportReputation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_projectId",
              type: "bytes32",
            },
          ],
          name: "addProjectCompletionReputation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_verificationId",
              type: "bytes32",
            },
          ],
          name: "addVerificationReputation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_voteId",
              type: "bytes32",
            },
          ],
          name: "addVotingReputation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "_citizenIds",
              type: "uint256[]",
            },
          ],
          name: "applyDailyDecay",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contract",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_authorized",
              type: "bool",
            },
          ],
          name: "authorizeContract",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "authorizedContracts",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "citizenRegistry",
          outputs: [
            {
              internalType: "contract CitizenIdentityRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "uint256",
              name: "issueReportReward",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "verificationReward",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "votingReward",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "projectCompletionReward",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "falseReportPenalty",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxDailyEarnings",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "decayRate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "minimumDecayThreshold",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_newScore",
              type: "uint256",
            },
          ],
          name: "emergencyResetReputation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
          ],
          name: "getDailyEarningsInfo",
          outputs: [
            {
              internalType: "uint256",
              name: "dailyEarnings",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "remainingEarnings",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lastReset",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
          ],
          name: "getReputationScore",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
          ],
          name: "getReputationStats",
          outputs: [
            {
              internalType: "uint256",
              name: "totalScore",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalReports",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "verifiedReports",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalVerifications",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "successfulVerifications",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "votingParticipation",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lastUpdateTimestamp",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_limit",
              type: "uint256",
            },
          ],
          name: "getTopReputationCitizens",
          outputs: [
            {
              internalType: "uint256[]",
              name: "citizenIds",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "scores",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_citizenId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_reportId",
              type: "bytes32",
            },
          ],
          name: "penalizeFalseReport",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_issueReportReward",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_verificationReward",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_votingReward",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_projectCompletionReward",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_falseReportPenalty",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxDailyEarnings",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_decayRate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_minimumDecayThreshold",
              type: "uint256",
            },
          ],
          name: "updateConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 9142954,
    },
    TreasuryFundTracking: {
      address: "0x593C0cbA6a0e377d7BcB118AEeb691955db82078",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_projectRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_citizenRegistry",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_initialBudget",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "previousTotal",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newTotal",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "updatedBy",
              type: "address",
            },
          ],
          name: "BudgetUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "contributionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "donor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
          ],
          name: "DonationReceived",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "reason",
              type: "string",
            },
            {
              indexed: true,
              internalType: "address",
              name: "authorizedBy",
              type: "address",
            },
          ],
          name: "EmergencyWithdrawal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "allocationId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum TreasuryFundTracking.FundSource",
              name: "source",
              type: "uint8",
            },
            {
              indexed: true,
              internalType: "address",
              name: "authorizedBy",
              type: "address",
            },
          ],
          name: "FundsAllocated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "transactionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum TreasuryFundTracking.TransactionType",
              name: "transactionType",
              type: "uint8",
            },
            {
              indexed: true,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "TransactionRecorded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "transactionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "verifiedBy",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "verificationTimestamp",
              type: "uint256",
            },
          ],
          name: "TransactionVerified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "treasurer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "authorized",
              type: "bool",
            },
            {
              indexed: true,
              internalType: "address",
              name: "authorizedBy",
              type: "address",
            },
          ],
          name: "TreasurerAuthorized",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "enum TreasuryFundTracking.FundSource",
              name: "_source",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "_ipfsDescriptionHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "_documentHash",
              type: "string",
            },
          ],
          name: "allocateFundsToProject",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allocations",
          outputs: [
            {
              internalType: "uint256",
              name: "allocationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "enum TreasuryFundTracking.FundSource",
              name: "source",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "authorizedBy",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "ipfsDescriptionHash",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
            {
              internalType: "string",
              name: "documentHash",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_treasurer",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_authorized",
              type: "bool",
            },
          ],
          name: "authorizeTreasurer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "authorizedTreasurers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "citizenRegistry",
          outputs: [
            {
              internalType: "contract CitizenIdentityRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "contributions",
          outputs: [
            {
              internalType: "uint256",
              name: "contributionId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "donor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "ipfsMessageHash",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isAnonymous",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isRefunded",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "donorContributions",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
            {
              internalType: "string",
              name: "_reason",
              type: "string",
            },
          ],
          name: "emergencyWithdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getBudgetOverview",
          outputs: [
            {
              internalType: "uint256",
              name: "totalBudget",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "allocatedBudget",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "spentBudget",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableBudget",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "utilizationPercentage",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getContractBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_donor",
              type: "address",
            },
          ],
          name: "getDonorContributions",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
          ],
          name: "getProjectAllocations",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
          ],
          name: "getProjectFinancials",
          outputs: [
            {
              internalType: "uint256",
              name: "allocatedAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "spentAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "transactionCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "utilizationPercentage",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
          ],
          name: "getProjectTransactions",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalContributions",
          outputs: [
            {
              internalType: "uint256",
              name: "totalAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getUnverifiedTransactions",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "projectAllocations",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "projectRegistry",
          outputs: [
            {
              internalType: "contract GovernmentProjectRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "projectTransactions",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_ipfsMessageHash",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_isAnonymous",
              type: "bool",
            },
          ],
          name: "receiveDonation",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_projectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "enum TreasuryFundTracking.TransactionType",
              name: "_transactionType",
              type: "uint8",
            },
            {
              internalType: "enum TreasuryFundTracking.FundSource",
              name: "_source",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              internalType: "string",
              name: "_ipfsDescriptionHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "_receiptHash",
              type: "string",
            },
          ],
          name: "recordTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_contributionId",
              type: "uint256",
            },
          ],
          name: "refundDonation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "transactions",
          outputs: [
            {
              internalType: "uint256",
              name: "transactionId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "projectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "enum TreasuryFundTracking.TransactionType",
              name: "transactionType",
              type: "uint8",
            },
            {
              internalType: "enum TreasuryFundTracking.FundSource",
              name: "source",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "authorizedBy",
              type: "address",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "ipfsDescriptionHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "receiptHash",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
            {
              internalType: "address",
              name: "verifiedBy",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "verificationTimestamp",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_fromProjectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_toProjectId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_reason",
              type: "string",
            },
          ],
          name: "transferFundsBetweenProjects",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_newTotalBudget",
              type: "uint256",
            },
          ],
          name: "updateBudget",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_transactionId",
              type: "uint256",
            },
          ],
          name: "verifyTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 9142957,
    },
    VotingGovernanceSystem: {
      address: "0x51649792320c676b2e38accfb7cd61ab0d2a3f5a",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_citizenRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_reputationSystem",
              type: "address",
            },
            {
              internalType: "address",
              name: "_projectRegistry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "proposalId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "creatorCitizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum VotingGovernanceSystem.ProposalType",
              name: "proposalType",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "string",
              name: "title",
              type: "string",
            },
          ],
          name: "ProposalCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "proposalId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum VotingGovernanceSystem.ProposalStatus",
              name: "finalStatus",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "yesVotes",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "noVotes",
              type: "uint256",
            },
          ],
          name: "ProposalExecuted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "proposalId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum VotingGovernanceSystem.ProposalStatus",
              name: "oldStatus",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "enum VotingGovernanceSystem.ProposalStatus",
              name: "newStatus",
              type: "uint8",
            },
          ],
          name: "ProposalStatusChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "proposalId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "voter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "support",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "votingPower",
              type: "uint256",
            },
          ],
          name: "VoteCast",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_proposalId",
              type: "uint256",
            },
          ],
          name: "cancelProposal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_proposalId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_support",
              type: "bool",
            },
            {
              internalType: "string",
              name: "_reason",
              type: "string",
            },
          ],
          name: "castVote",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "citizenProposals",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "citizenRegistry",
          outputs: [
            {
              internalType: "contract CitizenIdentityRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_title",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "enum VotingGovernanceSystem.ProposalType",
              name: "_proposalType",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_votingPeriod",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_relatedProjectId",
              type: "uint256",
            },
          ],
          name: "createProposal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "defaultPassingThreshold",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "defaultVotingPeriod",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_proposalId",
              type: "uint256",
            },
          ],
          name: "executeProposal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getActiveProposals",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_citizen",
              type: "address",
            },
          ],
          name: "getCitizenProposals",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_proposalId",
              type: "uint256",
            },
          ],
          name: "getProposal",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "proposalId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "creatorCitizenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "creator",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "title",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfsDescriptionHash",
                  type: "string",
                },
                {
                  internalType: "enum VotingGovernanceSystem.ProposalType",
                  name: "proposalType",
                  type: "uint8",
                },
                {
                  internalType: "enum VotingGovernanceSystem.ProposalStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "creationTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "votingEndTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "executionTimestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "yesVotes",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "noVotes",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalVotingPower",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "quorumRequired",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "passingThreshold",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "executionData",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "ipfsDocumentHash",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isExecuted",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "relatedProjectId",
                  type: "uint256",
                },
              ],
              internalType: "struct VotingGovernanceSystem.Proposal",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_proposalId",
              type: "uint256",
            },
          ],
          name: "getProposalVotes",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "citizenId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "voter",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "support",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "votingPower",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "reason",
                  type: "string",
                },
              ],
              internalType: "struct VotingGovernanceSystem.Vote[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum VotingGovernanceSystem.ProposalType",
              name: "_proposalType",
              type: "uint8",
            },
          ],
          name: "getProposalsByType",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalProposals",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getVotingStats",
          outputs: [
            {
              internalType: "uint256",
              name: "totalProposals",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "activeProposals",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "passedProposals",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "rejectedProposals",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "hasVoted",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "minimumQuorum",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "minimumReputationToPropose",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "minimumReputationToVote",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "projectRegistry",
          outputs: [
            {
              internalType: "contract GovernmentProjectRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "proposalVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "citizenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "voter",
              type: "address",
            },
            {
              internalType: "bool",
              name: "support",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "votingPower",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "proposals",
          outputs: [
            {
              internalType: "uint256",
              name: "proposalId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "creatorCitizenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "string",
              name: "title",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsDescriptionHash",
              type: "string",
            },
            {
              internalType: "enum VotingGovernanceSystem.ProposalType",
              name: "proposalType",
              type: "uint8",
            },
            {
              internalType: "enum VotingGovernanceSystem.ProposalStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "creationTimestamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "votingEndTimestamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "executionTimestamp",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "yesVotes",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "noVotes",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalVotingPower",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "quorumRequired",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "passingThreshold",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "executionData",
              type: "bytes",
            },
            {
              internalType: "string",
              name: "ipfsDocumentHash",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isExecuted",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "relatedProjectId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "reputationSystem",
          outputs: [
            {
              internalType: "contract ReputationSystem",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "typeProposals",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_projectRegistry",
              type: "address",
            },
          ],
          name: "updateProjectRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_reputationSystem",
              type: "address",
            },
          ],
          name: "updateReputationSystem",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_defaultVotingPeriod",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_minimumQuorum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_defaultPassingThreshold",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_minimumReputationToPropose",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_minimumReputationToVote",
              type: "uint256",
            },
          ],
          name: "updateVotingConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 9143026,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
